syntax = "proto3";

package Hmi397Proto;

message FromHMIF {
  .Hmi397Proto.MessageInfo messageinfo = 1;
  .Hmi397Proto.OtherCtrlInfo veh_control = 2;
  .Hmi397Proto.HMI397HeartBeats heart_beats = 3;
  .Hmi397Proto.HMI397DiagnosisInfo diagnosis_info = 4;
  .Hmi397Proto.DebugHMI397 debug_hmi397 = 5;
}

message DebugHMI397 {
  uint32 version = 1;
  uint32 rev = 2;
  uint32 rev2 = 3;
  uint32 rev3 = 4;
  uint32 rev4 = 5;
}

message HMI397DiagnosisInfo {
  uint32 time_stamp = 1;
  uint32 front_module_fail = 2;
  uint32 input_signal_invalid = 3;
  uint32 module_running_error = 4;
  uint32 is_dtc = 5;
  uint32 reserved = 6;
}

message HMI397HeartBeats {
  uint32 heart_beats = 1;
}

message MessageInfo {
  uint32 ads_path_show_status = 1;
  uint32 ads_path_show_c1 = 2;
  uint32 ads_path_show_c2 = 3;
  uint32 ads_path_show_c3 = 4;
  uint32 ads_path_show_lng_range = 5;
  uint32 acc_acc_mode = 6;
  uint32 acc_iacc_hwa_mode = 7;
  uint32 ads_to_target_lat_distance = 8;
  uint32 acc_set_speed = 9;
  uint32 acc_time_gap_set = 10;
  uint32 acc_distance_level = 11;
  uint32 acc_csl_set_req = 12;
  uint32 las_tsr_host_spd_limit = 13;
  uint32 las_tsr_host_spd_limit_type = 14;
  uint32 las_overspeed_visual_warning = 15;
  uint32 las_overspeed_sound_warning = 16;
  uint32 ads_nda_status = 17;
  uint32 ads_nda_text_info = 18;
  uint32 ads_nda_fence_terminal_dis = 19;
  uint32 acc_lat_takeover_req = 20;
  uint32 acc_lng_takeover_req = 21;
  uint32 acc_takeover_req = 22;
  uint32 acc_dynamic_warning_level = 23;
  uint32 acc_safetynotice = 24;
  uint32 acc_adcnotice = 25;
  uint32 left_bsd_lcaalert = 26;
  uint32 right_bsd_lcaalert = 27;
  uint32 ads_auto_drive_state = 28;
  uint32 ads_acc_text_for_driver = 29;
  uint32 ads_iacc_text_for_driver = 30;
  uint32 acc_tjp_mode = 31;
  uint32 acc_tjp_text_info = 32;
  uint32 ads_ddsa_text_info = 33;
  uint32 ads_ddsa_status = 34;
  uint32 acc_voiceinfo = 35;
  uint32 acc_fresh_assist = 36;
  uint32 hmi_lcdal_system_status = 37;
  uint32 hmi_lcdar_system_status = 38;
  uint32 hmi_lcdar_rcta_alert = 39;
  uint32 hmi_lcdar_left_rcta_alert = 40;
  uint32 hmi_lcdal_right_sea_alert = 41;
  uint32 hmi_lcdal_sea_alert = 42;
  uint32 hmi_lcdal_right_rcw_alert = 43;
  uint32 hmi_lcdal_rcw_alert = 44;
  uint32 aeb_sys_sts = 45;
  uint32 aeb_warning_text = 46;
  uint32 aeb_target_type = 47;
  uint32 fcw_setting_sts = 48;
  uint32 fcw_active = 49;
  uint32 few_prewarning = 50;
  uint32 few_latent_warning = 51;
  uint32 probition_time = 52;
  uint32 rev1 = 53;
  uint32 rev2 = 54;
  uint32 rev3 = 55;
}

message OtherCtrlInfo {
  uint32 ads_auto_drive_state_display = 1;
  uint32 ads_voice_request = 2;
  uint32 acc_driver_seat_vibrat_switch_l = 3;
  uint32 acc_driver_seat_vibrat_switch_r = 4;
  uint32 acc_driver_seat_vibrat_mod = 5;
  uint32 acc_driver_seat_vibrat_pwm_duty = 6;
  uint32 acc_ldw_vibration_warning_req = 7;
  uint32 acc_ldw_shake_lev_status = 8;
  uint32 acc_driver_window_control = 9;
  uint32 acc_emergency_light_req = 10;
  uint32 acc_door_ctrl_req = 11;
  uint32 ads_auto_wiper_shift_rqe = 12;
  uint32 ads_autoheadlightshift_req = 13;
  uint32 acc_high_beam_control = 14;
  uint32 vehicle_body_ctrl_funst = 15;
  uint32 ads_udlc_trun_light_req = 16;
  uint32 awb_active = 17;
  uint32 awb_level = 18;
  uint32 acc_light_color = 19;
  uint32 acc_front_light_req = 20;
  uint32 acc_front_light_frq = 21;
  uint32 acc_left_light_req = 22;
  uint32 acc_left_light_frq = 23;
  uint32 acc_right_light_req = 24;
  uint32 acc_right_light_frq = 25;
  uint32 acc_box_light_req = 26;
  uint32 acc_box_light_frq = 27;
  uint32 acc_up_light_req = 28;
  uint32 acc_up_light_frq = 29;
  uint32 acc_safety_belt_req = 30;
  uint32 rev1 = 31;
  uint32 rev2 = 32;
  uint32 rev3 = 33;
}

