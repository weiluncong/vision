syntax = "proto3";

package PrdProto;

message FromPRD {
  .PrdProto.BypassInfo by_pass_info = 1;
  .PrdProto.ObjFunctionOut obj_function_out = 2;
  .PrdProto.ObjSelectOut obj_select_out = 3;
  .PrdProto.ObsInfoOut obs_info_out = 4;
  .PrdProto.PeopleInfoOut people_info_out = 5;
  .PrdProto.ApStateOut ap_state_out = 6;
  .PrdProto.TrafficSpeedBus traffic_speed_bus = 7;
  .PrdProto.PeopleToSTM people_to_stm = 8;
  .PrdProto.DangerFactorOut danger_factor_out = 9;
  .PrdProto.PrdDiagnosisInfo prd_diagnosis_info = 10;
  .PrdProto.PrdHeartBeats prd_heart_beats = 11;
  .PrdProto.DebugPrd debug_prd = 12;
  .PrdProto.PrdAlarm prd_alarm = 13;
}

message ApStateOut {
  uint32 ap_state = 1;
}

message BypassInfo {
  uint32 bypass_target = 1;
  uint32 bypass_cone = 2;
  uint32 bypass_pathcone = 3;
  double bypass_conedist = 4;
  double bypass_offset = 5;
}

message DangerFactorOut {
  repeated uint32 danger_factor = 1;
  repeated double danger_factor_uprate = 2;
  repeated double danger_factor_downrate = 3;
  uint32 slow_traffic_num = 4;
  bool stationary_scene_flag = 5;
  uint32 oppress_scene_num = 6;
  double oppress_left_speed = 7;
  double oppress_right_speed = 8;
  uint32 car_slow_num = 9;
  double car_slow_left_speed = 10;
  double car_slow_right_speed = 11;
}

message DebugPrd {
  uint32 prd_version = 1;
  uint32 control_obj_version = 2;
  uint32 cutin_version = 3;
  uint32 cutin_rear_version = 4;
  uint32 cutout_version = 5;
  uint32 long_avoid_version = 6;
  uint32 danger_scene_version = 7;
  uint32 people_version = 8;
  repeated double lat_percent = 9;
  bool left_slow_traffic_flag = 10;
  bool right_slow_traffic_flag = 11;
  bool left_far_dis = 12;
  bool right_far_dis = 13;
  repeated double traj_occu = 14;
  repeated double obj_occu = 15;
  repeated uint32 object_lane = 16;
}

message ObjFunctionOut {
  repeated uint32 cutin_lat_avoid = 1;
  repeated uint32 cutin_prob = 2;
  repeated uint32 cutout_prob = 3;
  repeated uint32 ap_state = 4;
  repeated double cutin_potential_uprate = 5;
  repeated double cutin_potential_downrate = 6;
  double lateral_offset_target = 7;
  uint32 offset_trackedobj_target = 8;
  double offset_time_target = 9;
  repeated uint32 target_avoid_prob = 10;
}

message ObjSelectOut {
  uint32 control_index = 1;
  uint32 potent_index = 2;
  uint32 udlc_index = 3;
  uint32 collision_index = 4;
  uint32 collision_level = 5;
  uint32 lc_obj3_index = 6;
  uint32 lc_obj4_index = 7;
  uint32 lc_obj7_index = 8;
  uint32 lc_obj8_index = 9;
  uint32 lc_obj9_index = 10;
  uint32 lc_obj10_index = 11;
  uint32 lc_obj11_index = 12;
  uint32 obj2_index = 13;
  bool control_disappear = 14;
  bool udlc_disappear = 15;
}

message ObsInfoOut {
  uint32 obsnum_in_host = 1;
  uint32 obsnum_in_left = 2;
  uint32 obsnum_in_right = 3;
  uint32 obs_danger = 4;
  double posx_host = 5;
  double posx_left = 6;
  double posx_right = 7;
  uint32 classtype = 8;
}

message PeopleInfoOut {
  repeated uint32 ped_exist_num = 1;
  repeated uint32 ped_alert_level = 2;
  repeated bool ped_proty = 3;
  repeated uint32 ped_zone = 4;
  uint32 ped_target_index = 5;
  double ped_target_probty = 6;
}

message PeopleToSTM {
  bool ped_left_lane_exist = 1;
  bool ped_right_lane_exist = 2;
  bool ped_ego_lane_exist = 3;
  bool ped_alert_level_first = 4;
  bool ped_alert_level_second = 5;
}

message PrdAlarm {
  repeated bool extrem_cutin_alarm = 1;
  repeated bool lat_avoid_alarm = 2;
  uint32 slow_traffic_alarm = 3;
  uint32 oppress_obj_alarm = 4;
  uint32 car_slow_alarm = 5;
  uint32 stationary_scene_alarm = 6;
  bool avoid_parallel_alarm = 7;
}

message PrdDiagnosisInfo {
  double time_stamp = 1;
  uint32 front_module_fail = 2;
  uint32 input_signal_invalid = 3;
  uint32 module_running_error = 4;
  uint32 is_dtc = 5;
  double reserved = 6;
  bool record_request = 7;
}

message PrdHeartBeats {
  uint32 heart_beats = 1;
}

message TrafficSpeedBus {
  double speedofleft = 1;
  double speedofright = 2;
  uint32 densityofleft = 3;
  uint32 densityofright = 4;
  double speed10 = 5;
  double speed11 = 6;
  uint32 density10 = 7;
  uint32 density11 = 8;
}

